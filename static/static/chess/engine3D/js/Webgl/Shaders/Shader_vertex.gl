        attribute vec3 aVertexNormal, aVertexPosition;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix,uPMatrix, OBJ_Matrix, V_Matrix;
        uniform int render, shadow;

        varying vec2 vTextureCoord;
        varying vec3 vNormal, sc_pos;

        const vec3 LIGHT_POS=vec3(0.,0.,4.);

        void main(void) {
               vec4 pos;
               vTextureCoord=aTextureCoord;
               sc_pos=vec3(OBJ_Matrix*vec4(aVertexPosition, 1.)); //position in scene ref
               vNormal=mat3(OBJ_Matrix)*aVertexNormal;

               if (shadow==1) {
                  vec3 n=normalize(sc_pos-LIGHT_POS);
                  vec3 position=sc_pos-(sc_pos[2]/n[2])*n+vec3(0.,0.,0.001);
                  pos=V_Matrix * vec4(position,1.);

               } else {
                  pos=uMVMatrix * vec4(aVertexPosition,1.);
               }
               
               
               gl_Position = uPMatrix * pos;
        }

